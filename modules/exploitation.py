import os
import subprocess

class ExploitationTools:
    def __init__(self, output_dir):
        self.output_dir = os.path.join(output_dir, 'exploitation')
        os.makedirs(self.output_dir, exist_ok=True)

    def run_metasploit_scan(self, target):
        """Run Metasploit scanning modules"""
        rc_file = os.path.join(self.output_dir, 'msf_scan.rc')
        output_file = os.path.join(self.output_dir, 'msf_results.txt')
        
        # Create resource script
        with open(rc_file, 'w') as f:
            f.write(f"""
use auxiliary/scanner/portscan/tcp
set RHOSTS {target}
run
use auxiliary/scanner/smb/smb_version
set RHOSTS {target}
run
use auxiliary/scanner/http/http_version
set RHOSTS {target}
run
exit
            """)
        
        try:
            subprocess.run([
                'msfconsole',
                '-r', rc_file,
                '-o', output_file
            ], check=True)
            return output_file
        except subprocess.CalledProcessError as e:
            print(f"Error running Metasploit: {str(e)}")
            return None

    def run_searchsploit(self, search_term):
        """Search for known exploits using SearchSploit"""
        output_file = os.path.join(self.output_dir, 'searchsploit_results.txt')
        try:
            subprocess.run([
                'searchsploit',
                '--nmap', search_term,
                '--output', output_file
            ], check=True)
            return output_file
        except subprocess.CalledProcessError as e:
            print(f"Error running SearchSploit: {str(e)}")
            return None
